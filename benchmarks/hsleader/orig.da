import sys
import random
controller = import_da('controller')

class P(process, controller.Controllee):
    def setup(ctl, left:P, right:P):
        super().setup(ctl)
        self.status = "Unknown"      # Current status, can be {"Unknown", "Leader"}
        self.phase_left, self.phase_right = False, False
        self.phase = 0

    @controller.run
    def run():
        while True:
            send(('Token', self.id, 'out', 1 << phase), to={left, right})

            if await(status == "Leader"):
                output("I am leader at phase %d!"%phase)
                send(('Leader', self.id), to={left, right})
                break
            elif (phase_left and phase_right):
                phase += 1
                phase_left, phase_right = False, False
            elif some(received(('Leader', leader))):
                output("Leader is " + str(leader))
                break

    def receive(msg=('Token', v, direction, h), from_=source):
        if source == left and direction == 'out':
            if v > self.id and h > 1:
                send(('Token', v, 'out', h-1), to=right)
            elif v > self.id and h == 1:
                send(('Token', v, 'in', 1), to=left)
            elif v == self.id:
                status = "Leader"

        elif source == right and direction == 'out':
            if v > self.id and h > 1:
                send(('Token', v, 'out', h-1), to=left)
            elif v > self.id and h == 1:
                send(('Token', v, 'in', 1), to=right)
            elif v == self.id:
                status = "Leader"

        elif source == left and direction == 'in':
            if v > self.id:
                send(('Token', v, 'in', 1), to=right)
            elif v == self.id:
                phase_left = True

        elif source == right and direction == 'in':
            if v > self.id:
                send(('Token', v, 'in', 1), to=left)
            elif v == self.id:
                phase_right = True

    def receive(msg=('Leader', leader), from_=source):
        if source == left:
            send(('Leader', leader), to=right)
        else:
            send(('Leader', leader), to=left)

def main():
    n = int(sys.argv[1]) if len(sys.argv) > 1 else 10
    config(channel="fifo")

    ctl = new(controller.Controller, num= 1)
    setup(ctl, (n,))
    start(ctl)

    topology = list(new(P, num= n))
    random.shuffle(topology)
    for i, p in enumerate(topology):
        if i == len(topology)-1:
           setup({p}, (ctl, topology[i-1], topology[0]))
        else:
           setup({p}, (ctl, topology[i-1], topology[i+1]))
    start(topology)

