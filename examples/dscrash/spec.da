import sys
class P(process):
   def setup(ps, v, maxfail):
       self.V = {v}          # set of values to agree on, intially own value v

   def main():
       for rnd in range(1, maxfail):
          send(('Value',
                setof(v, v in V,
                      has=(not some(sent(('Value', V2, _)), has=(v in V2)))),
                self.id), to=ps)
          reset("Received")
          await(some(received(('Value', _, _))))
          V |= setof(v, received(('Value', V2, _)), v in V2)
       x = min(V)
       output(x)

def main():
      n = int(sys.argv[1]) if len(sys.argv) > 1 else 10
      f = int(sys.argv[2]) if len(sys.argv) > 2 else 10
      ps = new(P, num= n)
      for i, p in enumerate(list(ps)):
            setup({p}, (ps, i, f))
      start(ps)
