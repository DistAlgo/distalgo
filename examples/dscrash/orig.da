import sys
class P(process):
   def setup(ps, v, maxfail):
       V = {v}          # set of values to agree on, intially own value v

   def main():
       for rnd in range(1, maxfail):
          send(('Value',
                frozenset([v for v in V
                           if (not (some(sent(('Value', _V2, self)), v in V2)))]),
                self), to=ps)
          reset_received()
          await(each(_p in ps, received(('Value', _, p))))
          V |= {v for _ in received(('Value', _V2, _)) for v in V2}
       x = min(V)
       output(x)

def main():
      n = int(sys.argv[1]) if len(sys.argv) > 1 else 10
      f = int(sys.argv[2]) if len(sys.argv) > 2 else 50
      ps = createprocs(P, n)
      for i, p in enumerate(list(ps)):
            setupprocs({p}, (ps, i, f))
      startprocs(ps)
