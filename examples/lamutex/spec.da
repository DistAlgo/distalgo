import sys

class P(process):
    def setup(s, n):
        pass

    def cs(task):
        --request
        c = logical_clock()
        send(('Request', c, self), to=s)
        await(each(received(('Request', c2, p2)),
                   has=((c, self) < (c2, p2) or received(('Release', _c2, _p2)))) and
              each(p3 in s, has=some(received(('Ack', c3, _p3)), has=(c3 > c))))
        --cs
        task()
        --release
        output("Release CS!")
        send(('Release', c, self), to=s)

    def recv(msg=('Request', _, p2)):
        send(('Ack', logical_clock(), self), to=p2)

    def main():
        def announce():
            output("In cs!")
        for i in range(n):
            cs(announce)
        send(('Done', self), to=s)
        await(each(p in s, has=received(('Done', _p))))
        output("Terminating..")

def main():
    nprocs = int(sys.argv[1]) if len(sys.argv) > 1 else 10
    nrounds = int(sys.argv[2]) if len(sys.argv) > 2 else 1

    use_channel("tcp")
    ps = createprocs(P, nprocs)
    # setup the processes
    for p in ps: setupprocs({p}, [ps-{p}, nrounds])
    # start the processes
    startprocs(ps)
